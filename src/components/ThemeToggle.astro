<button
  id="theme-toggle"
  type="button"
  class="fixed bottom-6 right-6 z-40 p-2 rounded-full bg-white dark:bg-slate-800 shadow-md text-slate-700 dark:text-slate-300 hover:bg-slate-100 dark:hover:bg-slate-700 focus:outline-none transition-all duration-300 transform hover:scale-110"
  aria-label="Toggle dark mode"
>
  <svg
    id="sun-icon"
    class="w-6 h-6 hidden dark:block"
    fill="none"
    stroke="currentColor"
    viewBox="0 0 24 24"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
    ></path>
  </svg>
  <svg
    id="moon-icon"
    class="w-6 h-6 block dark:hidden"
    fill="none"
    stroke="currentColor"
    viewBox="0 0 24 24"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
    ></path>
  </svg>
</button>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const themeToggle = document.getElementById('theme-toggle');
    const html = document.documentElement;
    
    // Check for saved theme preference or use OS preference
    const getThemePreference = () => {
      if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
        return localStorage.getItem('theme');
      }
      return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
    };
    
    const setTheme = (theme) => {
      html.classList.toggle('dark', theme === 'dark');
      localStorage.setItem('theme', theme);
    };
    
    // Set initial theme
    setTheme(getThemePreference());
    
    // Toggle theme on click
    themeToggle?.addEventListener('click', () => {
      const currentTheme = html.classList.contains('dark') ? 'dark' : 'light';
      const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
      
      // Add a smooth transition effect
      html.style.transition = 'background-color 0.5s ease, color 0.5s ease';
      
      // Toggle theme
      setTheme(newTheme);
      
      // Remove transition after animation completes
      setTimeout(() => {
        html.style.transition = '';
      }, 500);
    });
  });
</script>